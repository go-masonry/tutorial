// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.3
// source: api/garage.proto

package workshop

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type CarBody int32

const (
	Car_SEDAN     CarBody = 0
	Car_PHAETON   CarBody = 1
	Car_HATCHBACK CarBody = 2
)

// Enum value maps for CarBody.
var (
	CarBody_name = map[int32]string{
		0: "SEDAN",
		1: "PHAETON",
		2: "HATCHBACK",
	}
	CarBody_value = map[string]int32{
		"SEDAN":     0,
		"PHAETON":   1,
		"HATCHBACK": 2,
	}
)

func (x CarBody) Enum() *CarBody {
	p := new(CarBody)
	*p = x
	return p
}

func (x CarBody) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CarBody) Descriptor() protoreflect.EnumDescriptor {
	return file_api_garage_proto_enumTypes[0].Descriptor()
}

func (CarBody) Type() protoreflect.EnumType {
	return &file_api_garage_proto_enumTypes[0]
}

func (x CarBody) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CarBody.Descriptor instead.
func (CarBody) EnumDescriptor() ([]byte, []int) {
	return file_api_garage_proto_rawDescGZIP(), []int{0, 0}
}

type Car struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number    string  `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	Owner     string  `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	BodyStyle CarBody `protobuf:"varint,3,opt,name=body_style,json=bodyStyle,proto3,enum=tutorial.workshop.CarBody" json:"body_style,omitempty"`
	Color     string  `protobuf:"bytes,4,opt,name=color,proto3" json:"color,omitempty"`
}

func (x *Car) Reset() {
	*x = Car{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_garage_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Car) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Car) ProtoMessage() {}

func (x *Car) ProtoReflect() protoreflect.Message {
	mi := &file_api_garage_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Car.ProtoReflect.Descriptor instead.
func (*Car) Descriptor() ([]byte, []int) {
	return file_api_garage_proto_rawDescGZIP(), []int{0}
}

func (x *Car) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *Car) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Car) GetBodyStyle() CarBody {
	if x != nil {
		return x.BodyStyle
	}
	return Car_SEDAN
}

func (x *Car) GetColor() string {
	if x != nil {
		return x.Color
	}
	return ""
}

type PaintCarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarNumber    string `protobuf:"bytes,1,opt,name=car_number,json=carNumber,proto3" json:"car_number,omitempty"`
	DesiredColor string `protobuf:"bytes,2,opt,name=desired_color,json=desiredColor,proto3" json:"desired_color,omitempty"`
}

func (x *PaintCarRequest) Reset() {
	*x = PaintCarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_garage_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaintCarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaintCarRequest) ProtoMessage() {}

func (x *PaintCarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_garage_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaintCarRequest.ProtoReflect.Descriptor instead.
func (*PaintCarRequest) Descriptor() ([]byte, []int) {
	return file_api_garage_proto_rawDescGZIP(), []int{1}
}

func (x *PaintCarRequest) GetCarNumber() string {
	if x != nil {
		return x.CarNumber
	}
	return ""
}

func (x *PaintCarRequest) GetDesiredColor() string {
	if x != nil {
		return x.DesiredColor
	}
	return ""
}

type PaintFinishedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarNumber    string `protobuf:"bytes,1,opt,name=car_number,json=carNumber,proto3" json:"car_number,omitempty"`
	DesiredColor string `protobuf:"bytes,2,opt,name=desired_color,json=desiredColor,proto3" json:"desired_color,omitempty"`
}

func (x *PaintFinishedRequest) Reset() {
	*x = PaintFinishedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_garage_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaintFinishedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaintFinishedRequest) ProtoMessage() {}

func (x *PaintFinishedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_garage_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaintFinishedRequest.ProtoReflect.Descriptor instead.
func (*PaintFinishedRequest) Descriptor() ([]byte, []int) {
	return file_api_garage_proto_rawDescGZIP(), []int{2}
}

func (x *PaintFinishedRequest) GetCarNumber() string {
	if x != nil {
		return x.CarNumber
	}
	return ""
}

func (x *PaintFinishedRequest) GetDesiredColor() string {
	if x != nil {
		return x.DesiredColor
	}
	return ""
}

type RetrieveCarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CarNumber string `protobuf:"bytes,1,opt,name=car_number,json=carNumber,proto3" json:"car_number,omitempty"`
}

func (x *RetrieveCarRequest) Reset() {
	*x = RetrieveCarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_garage_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RetrieveCarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveCarRequest) ProtoMessage() {}

func (x *RetrieveCarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_garage_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveCarRequest.ProtoReflect.Descriptor instead.
func (*RetrieveCarRequest) Descriptor() ([]byte, []int) {
	return file_api_garage_proto_rawDescGZIP(), []int{3}
}

func (x *RetrieveCarRequest) GetCarNumber() string {
	if x != nil {
		return x.CarNumber
	}
	return ""
}

type SubPaintCarRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Car                    *Car   `protobuf:"bytes,1,opt,name=car,proto3" json:"car,omitempty"`
	DesiredColor           string `protobuf:"bytes,2,opt,name=desired_color,json=desiredColor,proto3" json:"desired_color,omitempty"`
	CallbackServiceAddress string `protobuf:"bytes,3,opt,name=callback_service_address,json=callbackServiceAddress,proto3" json:"callback_service_address,omitempty"`
}

func (x *SubPaintCarRequest) Reset() {
	*x = SubPaintCarRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_garage_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubPaintCarRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubPaintCarRequest) ProtoMessage() {}

func (x *SubPaintCarRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_garage_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubPaintCarRequest.ProtoReflect.Descriptor instead.
func (*SubPaintCarRequest) Descriptor() ([]byte, []int) {
	return file_api_garage_proto_rawDescGZIP(), []int{4}
}

func (x *SubPaintCarRequest) GetCar() *Car {
	if x != nil {
		return x.Car
	}
	return nil
}

func (x *SubPaintCarRequest) GetDesiredColor() string {
	if x != nil {
		return x.DesiredColor
	}
	return ""
}

func (x *SubPaintCarRequest) GetCallbackServiceAddress() string {
	if x != nil {
		return x.CallbackServiceAddress
	}
	return ""
}

var File_api_garage_proto protoreflect.FileDescriptor

var file_api_garage_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x70, 0x69, 0x2f, 0x67, 0x61, 0x72, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x11, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x68, 0x6f, 0x70, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xb4, 0x01, 0x0a, 0x03, 0x43, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0a, 0x62, 0x6f, 0x64, 0x79, 0x5f, 0x73,
	0x74, 0x79, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x74, 0x75, 0x74,
	0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x43,
	0x61, 0x72, 0x2e, 0x62, 0x6f, 0x64, 0x79, 0x52, 0x09, 0x62, 0x6f, 0x64, 0x79, 0x53, 0x74, 0x79,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x2d, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x12, 0x09, 0x0a, 0x05, 0x53, 0x45, 0x44, 0x41, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x48, 0x41, 0x45, 0x54, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x48, 0x41, 0x54, 0x43,
	0x48, 0x42, 0x41, 0x43, 0x4b, 0x10, 0x02, 0x22, 0x55, 0x0a, 0x0f, 0x50, 0x61, 0x69, 0x6e, 0x74,
	0x43, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61,
	0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x61, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x73,
	0x69, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x5a,
	0x0a, 0x14, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x46, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x5f, 0x6e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72, 0x4e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64,
	0x5f, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65,
	0x73, 0x69, 0x72, 0x65, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x22, 0x33, 0x0a, 0x12, 0x52, 0x65,
	0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x61, 0x72, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x61, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x9d, 0x01, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x43, 0x61, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x28, 0x0a, 0x03, 0x63, 0x61, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x43, 0x61, 0x72, 0x52, 0x03, 0x63, 0x61, 0x72,
	0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x38, 0x0a, 0x18, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63,
	0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x32,
	0xa3, 0x03, 0x0a, 0x08, 0x57, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x12, 0x59, 0x0a, 0x09,
	0x41, 0x63, 0x63, 0x65, 0x70, 0x74, 0x43, 0x61, 0x72, 0x12, 0x16, 0x2e, 0x74, 0x75, 0x74, 0x6f,
	0x72, 0x69, 0x61, 0x6c, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x43, 0x61,
	0x72, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x22, 0x11, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x2f,
	0x63, 0x61, 0x72, 0x73, 0x3a, 0x01, 0x2a, 0x12, 0x77, 0x0a, 0x08, 0x50, 0x61, 0x69, 0x6e, 0x74,
	0x43, 0x61, 0x72, 0x12, 0x22, 0x2e, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x77,
	0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x43, 0x61, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x1a, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72,
	0x6b, 0x73, 0x68, 0x6f, 0x70, 0x2f, 0x63, 0x61, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x5f,
	0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x7d, 0x2f, 0x70, 0x61, 0x69, 0x6e, 0x74, 0x3a, 0x01, 0x2a,
	0x12, 0x74, 0x0a, 0x0b, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x72, 0x12,
	0x25, 0x2e, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73,
	0x68, 0x6f, 0x70, 0x2e, 0x52, 0x65, 0x74, 0x72, 0x69, 0x65, 0x76, 0x65, 0x43, 0x61, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61,
	0x6c, 0x2e, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x43, 0x61, 0x72, 0x22, 0x26,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x68, 0x6f, 0x70, 0x2f, 0x63, 0x61, 0x72, 0x73, 0x2f, 0x7b, 0x63, 0x61, 0x72, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x7d, 0x12, 0x4d, 0x0a, 0x0a, 0x43, 0x61, 0x72, 0x50, 0x61, 0x69,
	0x6e, 0x74, 0x65, 0x64, 0x12, 0x27, 0x2e, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x2e, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x46, 0x69,
	0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x32, 0x7a, 0x0a, 0x0b, 0x53, 0x75, 0x62, 0x57, 0x6f, 0x72, 0x6b,
	0x73, 0x68, 0x6f, 0x70, 0x12, 0x6b, 0x0a, 0x08, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x43, 0x61, 0x72,
	0x12, 0x25, 0x2e, 0x74, 0x75, 0x74, 0x6f, 0x72, 0x69, 0x61, 0x6c, 0x2e, 0x77, 0x6f, 0x72, 0x6b,
	0x73, 0x68, 0x6f, 0x70, 0x2e, 0x53, 0x75, 0x62, 0x50, 0x61, 0x69, 0x6e, 0x74, 0x43, 0x61, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x75, 0x62,
	0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x2f, 0x70, 0x61, 0x69, 0x6e, 0x74, 0x3a, 0x01,
	0x2a, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x3b, 0x77, 0x6f, 0x72, 0x6b, 0x73, 0x68, 0x6f, 0x70, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_garage_proto_rawDescOnce sync.Once
	file_api_garage_proto_rawDescData = file_api_garage_proto_rawDesc
)

func file_api_garage_proto_rawDescGZIP() []byte {
	file_api_garage_proto_rawDescOnce.Do(func() {
		file_api_garage_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_garage_proto_rawDescData)
	})
	return file_api_garage_proto_rawDescData
}

var file_api_garage_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_api_garage_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_api_garage_proto_goTypes = []interface{}{
	(CarBody)(0),                 // 0: tutorial.workshop.Car.body
	(*Car)(nil),                  // 1: tutorial.workshop.Car
	(*PaintCarRequest)(nil),      // 2: tutorial.workshop.PaintCarRequest
	(*PaintFinishedRequest)(nil), // 3: tutorial.workshop.PaintFinishedRequest
	(*RetrieveCarRequest)(nil),   // 4: tutorial.workshop.RetrieveCarRequest
	(*SubPaintCarRequest)(nil),   // 5: tutorial.workshop.SubPaintCarRequest
	(*empty.Empty)(nil),          // 6: google.protobuf.Empty
}
var file_api_garage_proto_depIdxs = []int32{
	0, // 0: tutorial.workshop.Car.body_style:type_name -> tutorial.workshop.Car.body
	1, // 1: tutorial.workshop.SubPaintCarRequest.car:type_name -> tutorial.workshop.Car
	1, // 2: tutorial.workshop.Workshop.AcceptCar:input_type -> tutorial.workshop.Car
	2, // 3: tutorial.workshop.Workshop.PaintCar:input_type -> tutorial.workshop.PaintCarRequest
	4, // 4: tutorial.workshop.Workshop.RetrieveCar:input_type -> tutorial.workshop.RetrieveCarRequest
	3, // 5: tutorial.workshop.Workshop.CarPainted:input_type -> tutorial.workshop.PaintFinishedRequest
	5, // 6: tutorial.workshop.SubWorkshop.PaintCar:input_type -> tutorial.workshop.SubPaintCarRequest
	6, // 7: tutorial.workshop.Workshop.AcceptCar:output_type -> google.protobuf.Empty
	6, // 8: tutorial.workshop.Workshop.PaintCar:output_type -> google.protobuf.Empty
	1, // 9: tutorial.workshop.Workshop.RetrieveCar:output_type -> tutorial.workshop.Car
	6, // 10: tutorial.workshop.Workshop.CarPainted:output_type -> google.protobuf.Empty
	6, // 11: tutorial.workshop.SubWorkshop.PaintCar:output_type -> google.protobuf.Empty
	7, // [7:12] is the sub-list for method output_type
	2, // [2:7] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_api_garage_proto_init() }
func file_api_garage_proto_init() {
	if File_api_garage_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_garage_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Car); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_garage_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaintCarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_garage_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaintFinishedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_garage_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RetrieveCarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_garage_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubPaintCarRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_garage_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_api_garage_proto_goTypes,
		DependencyIndexes: file_api_garage_proto_depIdxs,
		EnumInfos:         file_api_garage_proto_enumTypes,
		MessageInfos:      file_api_garage_proto_msgTypes,
	}.Build()
	File_api_garage_proto = out.File
	file_api_garage_proto_rawDesc = nil
	file_api_garage_proto_goTypes = nil
	file_api_garage_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WorkshopClient is the client API for Workshop service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WorkshopClient interface {
	AcceptCar(ctx context.Context, in *Car, opts ...grpc.CallOption) (*empty.Empty, error)
	PaintCar(ctx context.Context, in *PaintCarRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	RetrieveCar(ctx context.Context, in *RetrieveCarRequest, opts ...grpc.CallOption) (*Car, error)
	CarPainted(ctx context.Context, in *PaintFinishedRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type workshopClient struct {
	cc grpc.ClientConnInterface
}

func NewWorkshopClient(cc grpc.ClientConnInterface) WorkshopClient {
	return &workshopClient{cc}
}

func (c *workshopClient) AcceptCar(ctx context.Context, in *Car, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tutorial.workshop.Workshop/AcceptCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workshopClient) PaintCar(ctx context.Context, in *PaintCarRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tutorial.workshop.Workshop/PaintCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workshopClient) RetrieveCar(ctx context.Context, in *RetrieveCarRequest, opts ...grpc.CallOption) (*Car, error) {
	out := new(Car)
	err := c.cc.Invoke(ctx, "/tutorial.workshop.Workshop/RetrieveCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *workshopClient) CarPainted(ctx context.Context, in *PaintFinishedRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tutorial.workshop.Workshop/CarPainted", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WorkshopServer is the server API for Workshop service.
type WorkshopServer interface {
	AcceptCar(context.Context, *Car) (*empty.Empty, error)
	PaintCar(context.Context, *PaintCarRequest) (*empty.Empty, error)
	RetrieveCar(context.Context, *RetrieveCarRequest) (*Car, error)
	CarPainted(context.Context, *PaintFinishedRequest) (*empty.Empty, error)
}

// UnimplementedWorkshopServer can be embedded to have forward compatible implementations.
type UnimplementedWorkshopServer struct {
}

func (*UnimplementedWorkshopServer) AcceptCar(context.Context, *Car) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AcceptCar not implemented")
}
func (*UnimplementedWorkshopServer) PaintCar(context.Context, *PaintCarRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaintCar not implemented")
}
func (*UnimplementedWorkshopServer) RetrieveCar(context.Context, *RetrieveCarRequest) (*Car, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RetrieveCar not implemented")
}
func (*UnimplementedWorkshopServer) CarPainted(context.Context, *PaintFinishedRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CarPainted not implemented")
}

func RegisterWorkshopServer(s *grpc.Server, srv WorkshopServer) {
	s.RegisterService(&_Workshop_serviceDesc, srv)
}

func _Workshop_AcceptCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Car)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkshopServer).AcceptCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tutorial.workshop.Workshop/AcceptCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkshopServer).AcceptCar(ctx, req.(*Car))
	}
	return interceptor(ctx, in, info, handler)
}

func _Workshop_PaintCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaintCarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkshopServer).PaintCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tutorial.workshop.Workshop/PaintCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkshopServer).PaintCar(ctx, req.(*PaintCarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Workshop_RetrieveCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RetrieveCarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkshopServer).RetrieveCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tutorial.workshop.Workshop/RetrieveCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkshopServer).RetrieveCar(ctx, req.(*RetrieveCarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Workshop_CarPainted_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PaintFinishedRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WorkshopServer).CarPainted(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tutorial.workshop.Workshop/CarPainted",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WorkshopServer).CarPainted(ctx, req.(*PaintFinishedRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Workshop_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tutorial.workshop.Workshop",
	HandlerType: (*WorkshopServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AcceptCar",
			Handler:    _Workshop_AcceptCar_Handler,
		},
		{
			MethodName: "PaintCar",
			Handler:    _Workshop_PaintCar_Handler,
		},
		{
			MethodName: "RetrieveCar",
			Handler:    _Workshop_RetrieveCar_Handler,
		},
		{
			MethodName: "CarPainted",
			Handler:    _Workshop_CarPainted_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/garage.proto",
}

// SubWorkshopClient is the client API for SubWorkshop service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SubWorkshopClient interface {
	PaintCar(ctx context.Context, in *SubPaintCarRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type subWorkshopClient struct {
	cc grpc.ClientConnInterface
}

func NewSubWorkshopClient(cc grpc.ClientConnInterface) SubWorkshopClient {
	return &subWorkshopClient{cc}
}

func (c *subWorkshopClient) PaintCar(ctx context.Context, in *SubPaintCarRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/tutorial.workshop.SubWorkshop/PaintCar", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// SubWorkshopServer is the server API for SubWorkshop service.
type SubWorkshopServer interface {
	PaintCar(context.Context, *SubPaintCarRequest) (*empty.Empty, error)
}

// UnimplementedSubWorkshopServer can be embedded to have forward compatible implementations.
type UnimplementedSubWorkshopServer struct {
}

func (*UnimplementedSubWorkshopServer) PaintCar(context.Context, *SubPaintCarRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PaintCar not implemented")
}

func RegisterSubWorkshopServer(s *grpc.Server, srv SubWorkshopServer) {
	s.RegisterService(&_SubWorkshop_serviceDesc, srv)
}

func _SubWorkshop_PaintCar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SubPaintCarRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SubWorkshopServer).PaintCar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/tutorial.workshop.SubWorkshop/PaintCar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SubWorkshopServer).PaintCar(ctx, req.(*SubPaintCarRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _SubWorkshop_serviceDesc = grpc.ServiceDesc{
	ServiceName: "tutorial.workshop.SubWorkshop",
	HandlerType: (*SubWorkshopServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PaintCar",
			Handler:    _SubWorkshop_PaintCar_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api/garage.proto",
}
